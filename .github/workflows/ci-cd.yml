name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set lowercase repository name
        run: echo "LOWER_REPO=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build and push root Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ env.LOWER_REPO }}:latest
          file: Dockerfile

      - name: Build and push Authentication Service image
        uses: docker/build-push-action@v5
        with:
          context: ./Authentication_service
          push: true
          tags: ghcr.io/${{ env.LOWER_REPO }}/auth:latest
          file: ./Authentication_service/Dockerfile

      - name: Build and push Python Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./backend_Python
          push: true
          tags: ghcr.io/${{ env.LOWER_REPO }}/python-backend:latest
          file: ./backend_Python/Dockerfile

      - name: Build and push Dashboard Service image
        uses: docker/build-push-action@v5
        with:
          context: ./Dashboard_Service
          push: true
          tags: ghcr.io/${{ env.LOWER_REPO }}/dashboard:latest
          file: ./Dashboard_Service/Dockerfile

  deploy-vercel:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy Authentication Service to Vercel
        run: |
          cd Authentication_service
          vercel --prod \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --org-id ${{ secrets.VERCEL_ORG_ID }} \
            --project-id ${{ secrets.VERCEL_AUTH_PROJECT_ID }}

      - name: Deploy Dashboard Service to Vercel
        run: |
          cd Dashboard_Service
          vercel --prod \
            --token ${{ secrets.VERCEL_TOKEN }} \
            --org-id ${{ secrets.VERCEL_ORG_ID }} \
            --project-id ${{ secrets.VERCEL_DASHBOARD_PROJECT_ID }}
